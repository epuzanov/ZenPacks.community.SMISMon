<tal:block metal:use-macro="here/templates/macros/page2">
<tal:block metal:fill-slot="contentPane">

<form method="post" tal:attributes="action here/os/absolute_url" 
    name="ipInterfaceListForm">

    
<tal:block 
        tal:define="unused here/os/cacheComponents;
        tableName string:interfacelist;
        objects here/os/interfaces/objectValuesAll;
        tabletitle string:Interfaces;
        batch python:here.ZenTableManager.getBatch(tableName,objects);
        menu_id string:IpInterface;
        showfilterbox python:True;"
    metal:define-macro="interfaceList">

<input type="hidden" name="context" value="interfaces"/>
<tal:block metal:use-macro="here/zenuimacros/macros/zentable">



<tal:block metal:fill-slot="zentablecontents">

<!-- BEGIN TABLE CONTENTS -->

    <tr tal:condition="batch">
        <th class="tableheader" width="20"></th>
        <th tal:replace="structure python:here.ZenTableManager.getTableHeader(
                            tableName,'primarySortKey','Name')"/>
        <th tal:replace="structure python:here.ZenTableManager.getTableHeader(
                            tableName,'getIpSortKey','IP Address','cmp')"/>
        <th class="tableheader">Network</th>
        <th tal:replace="structure python:here.ZenTableManager.getTableHeader(
                            tableName,'macaddress','MAC')"/>
        <th tal:condition="python: here.getZ('zIfDescription')"
            tal:replace="structure python:here.ZenTableManager.getTableHeader(
                            tableName,'description','Descr')"/>
        <th tal:replace="structure python:here.ZenTableManager.getTableHeader(
                        tableName,'getStatus','Status','cmp')"
                        width="60" />
       	<th class="tableheader" align="center" width="30">M</th>
       	<th class="tableheader" align="center" width="60">Lock</th>
    </tr>
    <tr tal:condition="not:batch">
        <th class="tableheader" align="left">
            No Interfaces
        </th>
    </tr>
    <tal:block tal:repeat="intf batch">
    <tr tal:define="odd repeat/intf/odd"
        tal:attributes="class python:test(odd, 'odd', 'even')">
      <td class="tablevalues" align="center">
         <input type="checkbox" name="componentNames:list" 
                tal:attributes="value intf/getRelationshipManagerId"/>
      </td>
      <td class="tablevalues">
      <tal:block 
       tal:content="structure python:intf.urlLink(text=intf.viewName())"/>
      </td>
      <td class="tablevalues">
          <span tal:repeat="ip intf/getIpAddressObjs" omit-tag="">
            <tal:block 
             tal:condition="python:hasattr(ip,'getIpAddress')"
             tal:content="structure python:ip.urlLink(text=ip.getIpAddress(),
              attrs={'class':'tablevalues'})"/>
            <span tal:condition="python:not hasattr(ip,'getIpAddress')"
                tal:replace="ip">1.1.1.1/24</span>
            <br/>
          </span>
      </td>
      <td class="tablevalues"
        tal:content="structure python:intf.getNetworkLinks()">
        10.2.1.0
      </td>
      <td class="tablevalues" tal:content="intf/macaddress">
         00:11:AA:BB:CC:DD
      </td>
      <td tal:condition="python: here.os.getZ('zIfDescription')" 
          class="tablevalues" tal:content="intf/description">
        A really nice interface
      </td>
      <td class="tablevalues" align="center" width="40">
              <img border="0" tal:attributes="src 
              python:here.getStatusImgSrc(intf.getStatus())" />
      </td>
      <td class="tablevalues" align="center">
      <img border="0"
       tal:attributes="src python:test(intf.snmpIgnore(),
               here.os.getStatusImgSrc(-1),
               here.os.getStatusImgSrc(0))" />
      </td>
      <td class="tablevalues" align="center">
      <img tal:condition="intf/isLockedFromDeletion" 
              border="0" src="locked-delete-icon.png">
      <img tal:condition="intf/isLockedFromUpdates" 
              border="0" src="locked-update-icon.png">
      <img tal:condition="intf/sendEventWhenBlocked" 
              border="0" src="locked-sendevent-icon.png">
      </td>
    </tr>
    </tal:block>
    <tr>
        <td tal:attributes="colspan python:here.getZ('zIfDescription') and 9 or 8"
            class="tableheader" align='center'>
        <form metal:use-macro="here/zenTableNavigation/macros/navtool"></form>
        </td>
    </tr>
<!-- END TABLE CONTENTS -->

</tal:block>
</tal:block>
</tal:block>

</form>
<form method="post" tal:attributes="action here/os/absolute_url" 
    name="storagePoolsListForm">

<tal:block metal:define-macro="storagePoolsList"
    tal:define="tableName string:storagePoolList;
    objects here/os/storagepools/objectValuesAll;
    tabletitle string:Disk Groups;
    batch python:here.ZenTableManager.getBatch(tableName,objects,
                                            sortedHeader='caption');">
<tal:block metal:use-macro="here/zenuimacros/macros/zentable">

<tal:block metal:fill-slot="zentablecontents">

<!-- BEGIN TABLE CONTENTS -->
    <tr tal:condition="objects">
        <th tal:replace="structure python:here.ZenTableManager.getTableHeader(
                            tableName,'caption','Name')">Name
        </th>
        <th tal:replace="structure python:here.ZenTableManager.getTableHeader(
                            tableName,'totalDisks','Total Disks')">Total Disks
        </th>
        <th tal:replace="structure python:here.ZenTableManager.getTableHeader(
                            tableName,'totalBytes','Total bytes')">Total Bytes
        </th>
        <th tal:replace="structure python:here.ZenTableManager.getTableHeader(
                            tableName,'usedBytes','Used bytes')">Used Bytes
        </th>
        <th tal:replace="structure python:here.ZenTableManager.getTableHeader(
                            tableName,'freeBytes','Free bytes')">Free Bytes
        </th>
        <th tal:replace="structure python:here.ZenTableManager.getTableHeader(
                            tableName,'capacity','% Util')">% Util
        </th>
        <th class="tableheader" align="center" width="60">Status</th>
    </tr>
    <tr tal:condition="not:objects">
        <th class="tableheader" align="left">
            No Disk Groups
        </th>
    </tr>
    <tal:block tal:repeat="stpool batch">
    <tr tal:define="odd repeat/stpool/odd"
        tal:attributes="class python:test(odd, 'odd', 'even')">
        
      <td class="tablevalues">
          <tal:block 
           tal:content="structure python:stpool.urlLink(text=stpool.caption,
            attrs={'class':'tablevalues'})"/>
      </td>
      <td class="tablevalues"
        tal:content="stpool/totalDisks">1
      </td>
      <td class="tablevalues"
        tal:content="stpool/totalBytesString">vol
      </td>
      <td class="tablevalues"
        tal:content="stpool/usedBytesString">vol
      </td>
      <td class="tablevalues"
        tal:content="stpool/availBytesString">vol
      </td>
      <td class="tablevalues"
        tal:content="stpool/capacity">vol
      </td>
      <td tal:define="color stpool/statusDot|string:grey" 
        class="tablevalues" style="text-align:center;">
        <img tal:attributes="src string:img/${color}_dot.png"/>
      </td>
    </tr>
    </tal:block>
    <tr>
        <td colspan="10" class="tableheader" align='center'>
        <form metal:use-macro="here/zenTableNavigation/macros/navtool"></form>
        </td>
    </tr>

<!-- END TABLE CONTENTS -->

</tal:block>
</tal:block>
</tal:block>

</form>

<form method="post" tal:attributes="action here/os/absolute_url" 
    name="consistencySetsListForm">

<tal:block metal:define-macro="consistencySetsList"
    tal:define="tableName string:consistencySetsList;
    objects here/os/drgroups/objectValuesAll;
    tabletitle string:Data Replication;
    batch python:here.ZenTableManager.getBatch(tableName,objects,
                                            sortedHeader='caption');">
<tal:block metal:use-macro="here/zenuimacros/macros/zentable">

<tal:block metal:fill-slot="zentablecontents">

<!-- BEGIN TABLE CONTENTS -->
    <tr tal:condition="objects">
        <th tal:replace="structure python:here.ZenTableManager.getTableHeader(
                            tableName,'caption','Name')">Name
        </th>
        <th tal:replace="structure python:here.ZenTableManager.getTableHeader(
                            tableName,'participationType','Role')">participationType
        </th>
        <th tal:replace="structure python:here.ZenTableManager.getTableHeader(
                            tableName,'writeMode','Write Mode')">writeMode
        </th>
        <th tal:replace="structure python:here.ZenTableManager.getTableHeader(
                            tableName,'getStoragePoolName','Log Disk Group')">getStoragePoolName
        </th>
        <th tal:replace="structure python:here.ZenTableManager.getTableHeader(
                            tableName,'getCurrentPercentLogLevel','Log Usage')">10
        </th>
        <th tal:replace="structure python:here.ZenTableManager.getTableHeader(
                            tableName,'remoteCellName','Remote System')">remoteCellName
        </th>
        <th class="tableheader" align="center" width="60">Status</th>
    </tr>
    <tr tal:condition="not:objects">
        <th class="tableheader" align="left">
            No Data Replication
        </th>
    </tr>
    <tal:block tal:repeat="drgroup batch">
    <tr tal:define="odd repeat/drgroup/odd"
        tal:attributes="class python:test(odd, 'odd', 'even')">
        
      <td class="tablevalues">
          <tal:block 
           tal:content="structure python:drgroup.urlLink(text=drgroup.caption,
            attrs={'class':'tablevalues'})"/>
      </td>
      <td class="tablevalues"
        tal:content="drgroup/participationType">source
      </td>
      <td class="tablevalues"
        tal:content="drgroup/writeMode">asynchronous
      </td>
      <td class="tablevalues"
        tal:content="drgroup/getStoragePoolName">EVA
      </td>
      <td class="tablevalues"
        tal:content="drgroup/getCurrentPercentLogLevel">10
      </td>
      <td class="tablevalues"
        tal:content="drgroup/remoteCellName">EVA
      </td>
      <td tal:define="color drgroup/statusDot|string:grey" 
        class="tablevalues" style="text-align:center;">
        <img tal:attributes="src string:img/${color}_dot.png"/>
      </td>
    </tr>
    </tal:block>
    <tr>
        <td colspan="7" class="tableheader" align='center'>
        <form metal:use-macro="here/zenTableNavigation/macros/navtool"></form>
        </td>
    </tr>

<!-- END TABLE CONTENTS -->

</tal:block>
</tal:block>
</tal:block>

</form>

<form method="post" tal:attributes="action here/os/absolute_url" 
    name="virtualDisksListForm">

<tal:block metal:define-macro="virtualDisksList"
    tal:define="tableName string:virtualDisksList;
    objects here/os/virtualdisks/objectValuesAll;
    tabletitle string:Virtual Disks;
    batch python:here.ZenTableManager.getBatch(tableName,objects,
                                            sortedHeader='caption');">
<tal:block metal:use-macro="here/zenuimacros/macros/zentable">

<tal:block metal:fill-slot="zentablecontents">

<!-- BEGIN TABLE CONTENTS -->
    <tr tal:condition="objects">
        <th tal:replace="structure python:here.ZenTableManager.getTableHeader(
                            tableName,'caption','Name')">Name
        </th>
        <th tal:replace="structure python:here.ZenTableManager.getTableHeader(
                            tableName,'diskType','Disk Type')">Disk Type
        </th>
        <th tal:replace="structure python:here.ZenTableManager.getTableHeader(
                            tableName,'accessType','Access')">Access
        </th>
        <th tal:replace="structure python:here.ZenTableManager.getTableHeader(
                            tableName,'size','Size')">Size
        </th>
        <th class="tableheader" align="center" width="60">Status</th>
    </tr>
    <tr tal:condition="not:objects">
        <th class="tableheader" align="left">
            No Virtual Disks
        </th>
    </tr>
    <tal:block tal:repeat="vdisk batch">
    <tr tal:define="odd repeat/vdisk/odd"
        tal:attributes="class python:test(odd, 'odd', 'even')">
        
      <td class="tablevalues">
          <tal:block 
           tal:content="structure python:vdisk.urlLink(text=vdisk.caption,
            attrs={'class':'tablevalues'})"/>
      </td>
      <td class="tablevalues"
        tal:content="vdisk/diskType">normal
      </td>
      <td class="tablevalues"
        tal:content="vdisk/accessType">Readable
      </td>
      <td class="tablevalues"
        tal:content="vdisk/totalBytesString">vol
      </td>
      <td tal:define="color vdisk/statusDot|string:grey" 
        class="tablevalues" style="text-align:center;">
        <img tal:attributes="src string:img/${color}_dot.png"/>
      </td>
    </tr>
    </tal:block>
    <tr>
        <td colspan="7" class="tableheader" align='center'>
        <form metal:use-macro="here/zenTableNavigation/macros/navtool"></form>
        </td>
    </tr>

<!-- END TABLE CONTENTS -->

</tal:block>
</tal:block>
</tal:block>

</form>
</tal:block>
</tal:block>

